const catchAsync = require('../middleware/catchAsync');
const Product=require('../models/productModel');
const ExpressError = require('../utils/ExpressError');
const ApiFeatures=require('../utils/ApiFeatures');
exports.getAllProducts=catchAsync(async (req,res)=>{
  const apiFeatures=new ApiFeatures(Product.find(),req.query.name).search()
  const products=await apiFeatures.query;
    res.status(200).json({
      products
    })})


exports.showProduct=catchAsync(async(req,res,next)=>{
  const product=await Product.findById(req.params.id);
  if(!product){
    return next(new ExpressError("product not found",404));
  }
  res.send('product is here');
}     
)

//admin
exports.addProduct=catchAsync(async(req,res,next)=>{
    const newProduct=req.body
   await Product.insertMany(newProduct)
   console.log(newProduct);
})

exports.editProduct=catchAsync(async (req,res,next)=>{
  let product=await Product.findById(req.params.id);
  if(!product){
    return next(new ExpressError("product not found",404));
  }
  product= await Product.findByIdAndUpdate(req.params.id,req.body,{
    new:true,
    runValidators:true,
    useFindAndModify:false
  });
  res.status(200).json({  
    product
  })
})

exports.deleteProduct=catchAsync(async (req,res,next)=>{
  const product=await Product.findById(req.params.id);
  if(!product){
    return next(new ExpressError("product not found",404));
  }
  await Product.findByIdAndDelete(req.params.id);
  res.status(200).json({
    success:true,
    message:"product deleted successfully"
  })

})
